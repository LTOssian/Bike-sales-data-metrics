services:
  bike_postgres:
    image: postgres:15.7
    container_name: bike_postgres
    ports:
      - "5433:5432"
    networks:
      - hadoop
    volumes:
      - ./bike_analytics_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: bike_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - hadoop
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./bike_sales_vizualisation/grafana/provisioning:/etc/grafana/provisioning
      - ./bike_sales_vizualisation/grafana/dashboard:/var/lib/grafana/dashboards
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    networks:
      - hadoop
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    ports:
      - "9092:9092"
    networks:
      - hadoop
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5

  fastapi:
    build: ./bike_sales_kafka_producer
    networks:
      - hadoop
    ports:
      - "8000:8000"
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

networks:
  hadoop:
    external: true

volumes:
  grafana_data: {}
